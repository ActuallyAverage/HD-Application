--Services
local RS = game:GetService("ReplicatedStorage")
local Debris = game:GetService("Debris")

--Variables
local RemotesFolder = RS:FindFirstChild("Remotes")
local Remote = RemotesFolder:FindFirstChild("CombatEvent")
local Fx = game.Workspace.FX
local SFX = Fx.SFX
local Punch = SFX:WaitForChild("Punch")
local HeavyPunch = SFX:WaitForChild("Heavy Hard Punch Hit")
local Punchmiss = SFX:WaitForChild("Punch Swing ")
local target 

--Config

local Damage = 1
local DamageChanged = false

local CombatAnims = { 

	["Ground"] = {

		'rbxassetid://8313757340', --1
		'rbxassetid://8313761363', --2
		'rbxassetid://8313766170', --3
		'rbxassetid://8313769663', --4
		'rbxassetid://8313774816', --5
		'rbxassetid://8313778158', --Block
		'rbxassetid://8313751640', --Idle
		'rbxassetid://8313787787', --Walk
		'rbxassetid://8313798399' --M2

	};

	["Aerial"] = {


	}

}

local function createHitbox(PChar: Model, Combo: number) --Create a function
	
	local Fired = false --Changes fired to false to be used as a cd
	
	local Overlap = OverlapParams.new() --Creates overlap params 
	Overlap.FilterType = Enum.RaycastFilterType.Blacklist --Makes a blacklist
	Overlap.FilterDescendantsInstances = {
		PChar:GetChildren()
	} --Table of instances to ignore
	
	local Plr = game.Players:GetPlayerFromCharacter(PChar)  --gets the plr
	
	local Hitbox = Instance.new("Part") --creates a part and names it hitbox
	Hitbox.Size = Vector3.new(4,5,4)
	Hitbox.CanCollide = false
	Hitbox.Anchored = false
	Hitbox.Transparency = 1
	Hitbox.CFrame = PChar.HumanoidRootPart.CFrame * CFrame.new(0,0,-3)
	Hitbox.Color = Color3.fromRGB(162, 0, 3)
	Hitbox.Parent = PChar
	
	local Weld = Instance.new("WeldConstraint") --creates a weld to weld the htbox to the character
	Weld.Part0 = Hitbox
	Weld.Part1 = PChar.HumanoidRootPart
	Weld.Parent = Hitbox
	
	local Parts = workspace:GetPartsInPart(Hitbox,Overlap) --finds the parts in the hitbox
	
	for i, v in ipairs(Parts) do --iterates through all the values in the "Parts" table
		
		if v.Parent:FindFirstChild("Humanoid") then --checks if the value in the table has a humanoid 
			
			if Combo == 5 then --if its the last combo
				
				if DamageChanged == false then --if the damage was not alreadychanged then
					DamageChanged = true --damage was changedd
					Damage += (Damage * Combo)/2 --the damage multiplied byt the combo then divided by 2 is added to the original damage
				end

			else
				
				if DamageChanged == false then --if the damage wasnt already changed
					DamageChanged = true --the damge was changed
					Damage = Combo --the damge value will be equal to the combo value
				end
				
				
			end
			
			target = v.Parent:FindFirstChild("Humanoid") --sets the target varible to the humanoid found
			target:TakeDamage(Damage) --deals damage to the same humanoid
			
			if ((PChar:FindFirstChild("Torso").Position) - (target.Parent:FindFirstChild("Torso").Position)).Magnitude <= 10 and Fired == false then --if the space between both characters' torso is less than 1- studs then
				Fired = true --sets the fired variable to true
				Remote:FireClient(Plr, "Hitbox", target, Damage) --fires a request to the client with the datavalue "Hittbox" and others
			end
			
		else 
			target = nil --removes the target if none was found 
		end
		
	end
	
	DamageChanged = false --sets damagechanged to false
	Fired = false --sets fired to false
	Debris:AddItem(Hitbox,0.40) --deletes the hitbox after 0.4 secs
	
	
end

local function knockback(target,char) --knockback function
	
	local success, errorMess = pcall(function() --uses pcal to not crash the script when it detects errors
		local Echar = target.Parent --sets the enemy character
		local torso = Echar:FindFirstChild("Torso") -- finds the enmy torso
		
		if Echar and char then --if both are found then
			local dir = (torso.Position - char:WaitForChild("Torso").Position).Unit --chanes the chars torso to a unit
			local att = Instance.new("Attachment", torso) --adds an attachment to the torso
			local force = Instance.new("VectorForce", torso) --creates a vectorforsein the same torso
			force.Attachment0 = att --sets the force's first atachment to 0
			force.Force = (dir * Vector3.new(0,1,0)).Unit * 100 --calculates the amount of force
			force.RelativeTo = Enum.ActuatorRelativeTo.World --sets the force relative to the world
			target.PlatformStand = true --sets the enemys humanoid to a plaformstand form so they cant move 
			
		end
	end)
	
	
	if success then --if no errors then
		print("Target Found") --print
	elseif errorMess then --if errors then
		warn(errorMess) --warn
	end
end

Remote.OnServerEvent:Connect(function(plr, CombatType, combo) --if a request is found from a client then
	
	--Variables 
	local char = plr.Character
	local Hum = char:FindFirstChild("Humanoid")
	
	if CombatType == "Ground" then	--if the datavalue is "Ground"
		
		if combo <= 4 then --if the combo hasnt ended then
			
			local animation = Instance.new("Animation") --create an animation
			animation.AnimationId = CombatAnims["Ground"][combo]
			animation.Parent = Hum

			local anim = Hum:LoadAnimation(animation) --load the animation
			anim:Play()
			
			anim.Stopped:Connect(function() --if the animation stopped playing
				
				createHitbox(char, combo) --call the hitbox function

				if target then --if a target was found
					Punch:Play() --play the sound
					target = nil -- then sets target to nil
				else
					Punchmiss:Play() --play a different sound
				end
				
			end)

			print(combo) --print what combo we in
			
		else --if combo ended 
			
			local animation = Instance.new("Animation") --create an animation
			animation.AnimationId = CombatAnims["Ground"][combo]
			animation.Parent = Hum

			local anim = Hum:LoadAnimation(animation) --load that animation
			anim:Play()

			anim.Stopped:Connect(function() --if the animation finished playing

				createHitbox(char, combo) --cal the hitbox function

				if target then --if a target was found
					HeavyPunch:Play() --play the heavyhit sound
					Damage = 1 --set dmg to 1
					target = nil --removes the target 
				else
					Punchmiss:Play() --plays the missed punch sound
				end

			end)

			
			print(combo)
			
		end
		
	elseif CombatType == "Aerial" then --if its aerial combat theb
		
	end
	
end)

--Actuality #3086
